public class TestMutiMap {
    public static void main(String[] args) {
        Integer a[] = new Integer[]{1,3,2,2,2,3,4,3,1};
        List<Integer> ints = Arrays.asList(a);

        Multiset mset = HashMultiset.create();
        mset.addAll(ints);
        for(Object key:mset.elementSet()){
            System.out.println(key+" count："+mset.count(key));
        }
    }
}

MultiSet主要方法：

add(E element) :向其中添加单个元素
add(E element,int occurrences) : 向其中添加指定个数的元素
count(Object element) : 返回给定参数元素的个数
remove(E element) : 移除一个元素，其count值 会响应减少
remove(E element,int occurrences): 移除相应个数的元素
elementSet() : 将不同的元素放入一个Set中
entrySet(): 类似与Map.entrySet 返回Set<Multiset.Entry>。包含的Entry支持使用getElement()和getCount()
setCount(E element ,int count): 设定某一个元素的重复次数
setCount(E element,int oldCount,int newCount): 将符合原有重复个数的元素修改为新的重复次数
retainAll(Collection c) : 保留出现在给定集合参数的所有的元素
removeAll(Collectionc) : 去除出现给给定集合参数的所有的元素
